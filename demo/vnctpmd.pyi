from __future__ import annotations
__all__ = ['MdApi']
class MdApi:
    def __init__(self) -> None:
        ...
    def createFtdcMdApi(self, arg0: str) -> None:
        ...
    def exit(self) -> int:
        ...
    def getApiVersion(self) -> str:
        ...
    def getTradingDay(self) -> str:
        ...
    def init(self) -> None:
        ...
    def join(self) -> int:
        ...
    def onFrontConnected(self) -> None:
        ...
    def onFrontDisconnected(self, arg0: int) -> None:
        ...
    def onHeartBeatWarning(self, arg0: int) -> None:
        ...
    def onRspError(self, arg0: dict, arg1: int, arg2: bool) -> None:
        ...
    def onRspQryMulticastInstrument(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspSubForQuoteRsp(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspSubMarketData(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspUnSubForQuoteRsp(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspUnSubMarketData(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspUserLogin(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspUserLogout(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRtnDepthMarketData(self, arg0: dict) -> None:
        ...
    def onRtnForQuoteRsp(self, arg0: dict) -> None:
        ...
    def registerFensUserInfo(self, arg0: dict) -> None:
        ...
    def registerFront(self, arg0: str) -> None:
        ...
    def registerNameServer(self, arg0: str) -> None:
        ...
    def release(self) -> None:
        ...
    def reqQryMulticastInstrument(self, arg0: dict, arg1: int) -> int:
        ...
    def reqUserLogin(self, arg0: dict, arg1: int) -> int:
        ...
    def reqUserLogout(self, arg0: dict, arg1: int) -> int:
        ...
    def subscribeForQuoteRsp(self, arg0: str) -> int:
        ...
    def subscribeMarketData(self, arg0: str) -> int:
        ...
    def unSubscribeForQuoteRsp(self, arg0: str) -> int:
        ...
    def unSubscribeMarketData(self, arg0: str) -> int:
        ...
