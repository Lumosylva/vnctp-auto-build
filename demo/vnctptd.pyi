from __future__ import annotations
__all__ = ['TdApi']
class TdApi:
    def __init__(self) -> None:
        ...
    def createFtdcTraderApi(self, arg0: str) -> None:
        ...
    def exit(self) -> int:
        ...
    def getApiVersion(self) -> str:
        ...
    def getTradingDay(self) -> str:
        ...
    def init(self) -> None:
        ...
    def join(self) -> int:
        ...
    def onErrRtnBankToFutureByFuture(self, arg0: dict, arg1: dict) -> None:
        ...
    def onErrRtnBatchOrderAction(self, arg0: dict, arg1: dict) -> None:
        ...
    def onErrRtnCombActionInsert(self, arg0: dict, arg1: dict) -> None:
        ...
    def onErrRtnExecOrderAction(self, arg0: dict, arg1: dict) -> None:
        ...
    def onErrRtnExecOrderInsert(self, arg0: dict, arg1: dict) -> None:
        ...
    def onErrRtnForQuoteInsert(self, arg0: dict, arg1: dict) -> None:
        ...
    def onErrRtnFutureToBankByFuture(self, arg0: dict, arg1: dict) -> None:
        ...
    def onErrRtnOptionSelfCloseAction(self, arg0: dict, arg1: dict) -> None:
        ...
    def onErrRtnOptionSelfCloseInsert(self, arg0: dict, arg1: dict) -> None:
        ...
    def onErrRtnOrderAction(self, arg0: dict, arg1: dict) -> None:
        ...
    def onErrRtnOrderInsert(self, arg0: dict, arg1: dict) -> None:
        ...
    def onErrRtnQueryBankBalanceByFuture(self, arg0: dict, arg1: dict) -> None:
        ...
    def onErrRtnQuoteAction(self, arg0: dict, arg1: dict) -> None:
        ...
    def onErrRtnQuoteInsert(self, arg0: dict, arg1: dict) -> None:
        ...
    def onErrRtnRepealBankToFutureByFutureManual(self, arg0: dict, arg1: dict) -> None:
        ...
    def onErrRtnRepealFutureToBankByFutureManual(self, arg0: dict, arg1: dict) -> None:
        ...
    def onFrontConnected(self) -> None:
        ...
    def onFrontDisconnected(self, arg0: int) -> None:
        ...
    def onHeartBeatWarning(self, arg0: int) -> None:
        ...
    def onRspAuthenticate(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspBatchOrderAction(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspCombActionInsert(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspError(self, arg0: dict, arg1: int, arg2: bool) -> None:
        ...
    def onRspExecOrderAction(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspExecOrderInsert(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspForQuoteInsert(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspFromBankToFutureByFuture(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspFromFutureToBankByFuture(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspGenUserCaptcha(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspGenUserText(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspOptionSelfCloseAction(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspOptionSelfCloseInsert(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspOrderAction(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspOrderInsert(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspParkedOrderAction(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspParkedOrderInsert(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryAccountregister(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryBrokerTradingAlgos(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryBrokerTradingParams(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryCFMMCTradingAccountKey(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryClassifiedInstrument(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryCombAction(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryCombInstrumentGuard(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryCombPromotionParam(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryContractBank(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryDepthMarketData(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryEWarrantOffset(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryExchange(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryExchangeMarginRate(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryExchangeMarginRateAdjust(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryExchangeRate(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryExecOrder(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryForQuote(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryInstrument(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryInstrumentCommissionRate(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryInstrumentMarginRate(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryInstrumentOrderCommRate(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryInvestUnit(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryInvestor(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryInvestorCommodityGroupSPMMMargin(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryInvestorCommoditySPMMMargin(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryInvestorPortfMarginRatio(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryInvestorPosition(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryInvestorPositionCombineDetail(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryInvestorPositionDetail(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryInvestorProdRCAMSMargin(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryInvestorProdRULEMargin(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryInvestorProdSPBMDetail(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryInvestorProductGroupMargin(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryMMInstrumentCommissionRate(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryMMOptionInstrCommRate(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryMaxOrderVolume(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryNotice(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryOptionInstrCommRate(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryOptionInstrTradeCost(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryOptionSelfClose(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryOrder(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryParkedOrder(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryParkedOrderAction(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryProduct(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryProductExchRate(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryProductGroup(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryQuote(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryRCAMSCombProductInfo(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryRCAMSInstrParameter(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryRCAMSInterParameter(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryRCAMSIntraParameter(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryRCAMSInvestorCombPosition(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryRCAMSShortOptAdjustParam(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryRULEInstrParameter(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryRULEInterParameter(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryRULEIntraParameter(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryRiskSettleInvstPosition(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryRiskSettleProductStatus(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQrySPBMAddonInterParameter(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQrySPBMFutureParameter(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQrySPBMInterParameter(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQrySPBMIntraParameter(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQrySPBMInvestorPortfDef(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQrySPBMOptionParameter(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQrySPBMPortfDefinition(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQrySPMMInstParam(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQrySPMMProductParam(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQrySecAgentACIDMap(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQrySecAgentCheckMode(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQrySecAgentTradeInfo(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQrySecAgentTradingAccount(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQrySettlementInfo(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQrySettlementInfoConfirm(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryTrade(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryTraderOffer(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryTradingAccount(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryTradingCode(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryTradingNotice(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryTransferBank(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQryTransferSerial(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQueryBankAccountMoneyByFuture(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQueryCFMMCTradingAccountToken(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQuoteAction(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspQuoteInsert(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspRemoveParkedOrder(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspRemoveParkedOrderAction(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspSettlementInfoConfirm(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspTradingAccountPasswordUpdate(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspUserAuthMethod(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspUserLogin(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspUserLogout(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRspUserPasswordUpdate(self, arg0: dict, arg1: dict, arg2: int, arg3: bool) -> None:
        ...
    def onRtnBulletin(self, arg0: dict) -> None:
        ...
    def onRtnCFMMCTradingAccountToken(self, arg0: dict) -> None:
        ...
    def onRtnCancelAccountByBank(self, arg0: dict) -> None:
        ...
    def onRtnChangeAccountByBank(self, arg0: dict) -> None:
        ...
    def onRtnCombAction(self, arg0: dict) -> None:
        ...
    def onRtnErrorConditionalOrder(self, arg0: dict) -> None:
        ...
    def onRtnExecOrder(self, arg0: dict) -> None:
        ...
    def onRtnForQuoteRsp(self, arg0: dict) -> None:
        ...
    def onRtnFromBankToFutureByBank(self, arg0: dict) -> None:
        ...
    def onRtnFromBankToFutureByFuture(self, arg0: dict) -> None:
        ...
    def onRtnFromFutureToBankByBank(self, arg0: dict) -> None:
        ...
    def onRtnFromFutureToBankByFuture(self, arg0: dict) -> None:
        ...
    def onRtnInstrumentStatus(self, arg0: dict) -> None:
        ...
    def onRtnOpenAccountByBank(self, arg0: dict) -> None:
        ...
    def onRtnOptionSelfClose(self, arg0: dict) -> None:
        ...
    def onRtnOrder(self, arg0: dict) -> None:
        ...
    def onRtnQueryBankBalanceByFuture(self, arg0: dict) -> None:
        ...
    def onRtnQuote(self, arg0: dict) -> None:
        ...
    def onRtnRepealFromBankToFutureByBank(self, arg0: dict) -> None:
        ...
    def onRtnRepealFromBankToFutureByFuture(self, arg0: dict) -> None:
        ...
    def onRtnRepealFromBankToFutureByFutureManual(self, arg0: dict) -> None:
        ...
    def onRtnRepealFromFutureToBankByBank(self, arg0: dict) -> None:
        ...
    def onRtnRepealFromFutureToBankByFuture(self, arg0: dict) -> None:
        ...
    def onRtnRepealFromFutureToBankByFutureManual(self, arg0: dict) -> None:
        ...
    def onRtnTrade(self, arg0: dict) -> None:
        ...
    def onRtnTradingNotice(self, arg0: dict) -> None:
        ...
    def registerFensUserInfo(self, arg0: dict) -> None:
        ...
    def registerFront(self, arg0: str) -> None:
        ...
    def registerNameServer(self, arg0: str) -> None:
        ...
    def release(self) -> None:
        ...
    def reqAuthenticate(self, arg0: dict, arg1: int) -> int:
        ...
    def reqBatchOrderAction(self, arg0: dict, arg1: int) -> int:
        ...
    def reqCombActionInsert(self, arg0: dict, arg1: int) -> int:
        ...
    def reqExecOrderAction(self, arg0: dict, arg1: int) -> int:
        ...
    def reqExecOrderInsert(self, arg0: dict, arg1: int) -> int:
        ...
    def reqForQuoteInsert(self, arg0: dict, arg1: int) -> int:
        ...
    def reqFromBankToFutureByFuture(self, arg0: dict, arg1: int) -> int:
        ...
    def reqFromFutureToBankByFuture(self, arg0: dict, arg1: int) -> int:
        ...
    def reqGenUserCaptcha(self, arg0: dict, arg1: int) -> int:
        ...
    def reqGenUserText(self, arg0: dict, arg1: int) -> int:
        ...
    def reqOptionSelfCloseAction(self, arg0: dict, arg1: int) -> int:
        ...
    def reqOptionSelfCloseInsert(self, arg0: dict, arg1: int) -> int:
        ...
    def reqOrderAction(self, arg0: dict, arg1: int) -> int:
        ...
    def reqOrderInsert(self, arg0: dict, arg1: int) -> int:
        ...
    def reqParkedOrderAction(self, arg0: dict, arg1: int) -> int:
        ...
    def reqParkedOrderInsert(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryAccountregister(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryBrokerTradingAlgos(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryBrokerTradingParams(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryCFMMCTradingAccountKey(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryClassifiedInstrument(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryCombAction(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryCombInstrumentGuard(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryCombPromotionParam(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryContractBank(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryDepthMarketData(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryEWarrantOffset(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryExchange(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryExchangeMarginRate(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryExchangeMarginRateAdjust(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryExchangeRate(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryExecOrder(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryForQuote(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryInstrument(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryInstrumentCommissionRate(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryInstrumentMarginRate(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryInstrumentOrderCommRate(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryInvestUnit(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryInvestor(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryInvestorCommodityGroupSPMMMargin(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryInvestorCommoditySPMMMargin(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryInvestorPortfMarginRatio(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryInvestorPosition(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryInvestorPositionCombineDetail(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryInvestorPositionDetail(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryInvestorProdRCAMSMargin(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryInvestorProdRULEMargin(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryInvestorProdSPBMDetail(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryInvestorProductGroupMargin(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryMMInstrumentCommissionRate(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryMMOptionInstrCommRate(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryMaxOrderVolume(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryNotice(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryOptionInstrCommRate(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryOptionInstrTradeCost(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryOptionSelfClose(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryOrder(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryParkedOrder(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryParkedOrderAction(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryProduct(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryProductExchRate(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryProductGroup(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryQuote(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryRCAMSCombProductInfo(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryRCAMSInstrParameter(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryRCAMSInterParameter(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryRCAMSIntraParameter(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryRCAMSInvestorCombPosition(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryRCAMSShortOptAdjustParam(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryRULEInstrParameter(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryRULEInterParameter(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryRULEIntraParameter(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryRiskSettleInvstPosition(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryRiskSettleProductStatus(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQrySPBMAddOnInterParameter(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQrySPBMFutureParameter(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQrySPBMInterParameter(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQrySPBMIntraParameter(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQrySPBMInvestorPortfDef(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQrySPBMOptionParameter(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQrySPBMPortfDefinition(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQrySPMMInstParam(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQrySPMMProductParam(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQrySecAgentACIDMap(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQrySecAgentCheckMode(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQrySecAgentTradeInfo(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQrySecAgentTradingAccount(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQrySettlementInfo(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQrySettlementInfoConfirm(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryTrade(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryTraderOffer(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryTradingAccount(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryTradingCode(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryTradingNotice(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryTransferBank(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQryTransferSerial(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQueryBankAccountMoneyByFuture(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQueryCFMMCTradingAccountToken(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQuoteAction(self, arg0: dict, arg1: int) -> int:
        ...
    def reqQuoteInsert(self, arg0: dict, arg1: int) -> int:
        ...
    def reqRemoveParkedOrder(self, arg0: dict, arg1: int) -> int:
        ...
    def reqRemoveParkedOrderAction(self, arg0: dict, arg1: int) -> int:
        ...
    def reqSettlementInfoConfirm(self, arg0: dict, arg1: int) -> int:
        ...
    def reqTradingAccountPasswordUpdate(self, arg0: dict, arg1: int) -> int:
        ...
    def reqUserAuthMethod(self, arg0: dict, arg1: int) -> int:
        ...
    def reqUserLogin(self, arg0: dict, arg1: int) -> int:
        ...
    def reqUserLoginWithCaptcha(self, arg0: dict, arg1: int) -> int:
        ...
    def reqUserLoginWithOTP(self, arg0: dict, arg1: int) -> int:
        ...
    def reqUserLoginWithText(self, arg0: dict, arg1: int) -> int:
        ...
    def reqUserLogout(self, arg0: dict, arg1: int) -> int:
        ...
    def reqUserPasswordUpdate(self, arg0: dict, arg1: int) -> int:
        ...
    def subscribePrivateTopic(self, arg0: int) -> None:
        ...
    def subscribePublicTopic(self, arg0: int) -> None:
        ...
